{"mappings":"AAAA,MAAM,YAAY,EAAE;AACpB,MAAM,UAAU,UAAU,KAAK;AAC/B,oBAAoB;AACpB,MAAM,IAAI,aAAa,QAAQ;AAC/B,eAAe;AACf,MAAM,UAAU,KAAK,MAAM;AAC3B,qCAAqC;AACrC,+BAA+B;AAC/B,0FAA0F;AAC1F,kGAAkG;AAClG,6FAA6F;AAC7F,IAAI;AAEJ,IAAI,UAAU,WAAW;IACrB;QAAC,MAAK;QAAM,UAAS;QAAS,KAAI;IAAwB;IAC1D;QAAC,MAAK;QAAK,UAAS;QAAS,KAAI;IAA4B;IAC7D;QAAC,MAAK;QAAK,UAAS;QAAS,KAAI;IAA+B;CACnE;AAED,MAAM,cAAc,CAAC;IACjB,OAAO,IAAI,QAAQ,YAAW,IAC7B,QAAQ,WAAU,IAClB,QAAQ,QAAO,IACf,QAAQ,QAAO,KAAK,eAAe;AACxC;AACA,oBAAoB;AACpB,MAAM,SAAS;IACX,gCAAgC;IAChC,UAAU,KAAK,iBAAiB;IAChC,QAAQ,QAAQ,CAAC,MAAM;QACnB,MAAM,MAAM,EAAE,CAAC;;;oBAGH,EAAE,KAAK,KAAK;;kCAEE,EAAE,YAAY,KAAK,KAAK;;;;;;;aAO7C,CAAC,EAAE,aAAa;QAErB,yBAAyB;QACzB,IAAI,GAAG,SAAQ;YACX,OAAO,KAAK,KAAK;QACrB;QACA,iCAAiC;QACjC,IAAI,GAAG,SAAQ,UAAS,CAAC;YACrB,EAAE;YACF,SAAS;YACT,QAAQ,OAAO,OAAO;YAEtB;QACJ;IACJ;AAEJ;AAEA;AAEA,EAAE,cAAc,GAAG,SAAQ;IACvB,IAAI,MAAM,OAAO,OAAO;IACxB,IAAG,IAAI,QAAQ,aAAa,GACxB,MAAM,aAAa;IAGvB,mBAAmB;IACnB,QAAQ,KAAK;QACT,MAAK,YAAY,IAAI,CAAC,EAAE,CAAC;QACzB,UAAS;QACT,KAAI;IACR;IACA;AACJ;AAEA,OAAO,iBAAiB;IACpB,QAAQ,IAAI;IACZ,sBAAsB;IACtB,MAAM,SAAS,KAAK,UAAU;IAC9B,oCAAoC;IACpC,aAAa,QAAQ,KAAK;AAC9B;AAEA,EAAE,UAAU,GAAG,YAAW,CAAC;IAEvB,sBAAsB;IACtB,MAAM,EAAC,GAAG,EAAC,GAAG;IACd,IAAI,IAAI,IAAI,GAAG,IAAI,QAAQ,QAAQ,IAAI;QACnC,QAAQ,IAAI,OAAO,CAAC,EAAE,CAAC,KAAK;QAC5B,IAAG,OAAO,CAAC,EAAE,CAAC,KAAK,kBAAkB,KACjC,OAAO,KAAK,OAAO,CAAC,EAAE,CAAC;IAE/B;AACJ","sources":["Desktop/front-end-tutorial/nav-1/src/main.js"],"sourcesContent":["const $siteList = $('.siteList');\nconst $lastLi = $siteList.find('li.last');\n// 拿到localStorage存的值\nconst x = localStorage.getItem('x')\n// 将得到的字符串x变成对象\nconst xObject = JSON.parse(x)\n// 初始为预设。hashMap储存信息，解决退出界面后添加网站消失的问题\n// const hashMap = xObject || [\n//     {logo:\"./images/github-logo.png\",  logoType:'image', url:\"https://www.github.com\"},\n//     {logo:\"./images/css-tricks-logo.jpeg\", logoType:'image', url:\"https://www.css-tricks.com\"},\n//     {logo:\"./images/mdn-logo.png\", logoType:'image', url:\"https://developer.mozilla.org\"},\n// ]\n\nlet hashMap = xObject || [\n    {logo:\"G\",  logoType:'image', url:\"https://www.github.com\"},\n    {logo:\"C\", logoType:'image', url:\"https://www.css-tricks.com\"},\n    {logo:\"M\", logoType:'image', url:\"https://developer.mozilla.org\"},\n]\n\nconst simplifyUrl = (url) =>{\n    return url.replace('https://','')\n    .replace('http://','')\n    .replace('www.','')\n    .replace(/\\/.*/,''); //正则表达式删除/开头的内容\n}\n// 遍历预存内容并插入lastLi之前\nconst render = ()=>{\n    // 除新增按钮，remove其他数据（防止两遍）,重写DOM树\n    $siteList.find('li:not(.last)').remove();\n    hashMap.forEach((node, index)=>{\n        const $li = $(`<li>\n            <div class=\"site\">\n                <div class=\"logo\">\n                    ${node.logo}\n                </div>\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\n                <div class=\"close\">\n                    <svg class=\"icon\">\n                        <use xlink:href=\"#icon-closefill\"></use>\n                    </svg>\n                </div>\n            </div> \n        </li>`).insertBefore($lastLi)\n\n        // 用click事件监听点击url,替代了a标签\n        $li.on('click',()=>{\n            window.open(node.url)\n        })\n        // 阻止点击close时冒泡，防止把close当做触发点击a标签\n        $li.on('click','.close',(e)=>{\n            e.stopPropagation();\n            // 删除对应元素\n            hashMap.splice(index, 1);\n       \n            render();\n        })\n    })\n    \n}\n\nrender();\n\n$('.addButton').on('click',()=>{\n    let url = window.prompt(\"请问要添加什么网址？\");\n    if(url.indexOf('https') !== 0){\n        url = 'https://' + url;\n    }\n    \n    // 将添加的新对象存入hashMap\n    hashMap.push({\n        logo:simplifyUrl(url)[0].toUpperCase(),\n        logoType:'text',\n        url:url \n    });  \n    render();\n})\n\nwindow.onbeforeunload = ()=>{\n    console.log('页面关闭')\n    // local storage只能存字符串\n    const string = JSON.stringify(hashMap)\n    // localStrorage在本地设置一个值，并把string传给他\n    localStorage.setItem('x', string)\n}\n\n$(document).on('keypress',(e)=>{\n    \n    // 同下const key = e.key\n    const {key} = e\n    for(let i = 0; i < hashMap.length; i++){\n        console.log(hashMap[i].logo.toLowerCase())\n        if(hashMap[i].logo.toLowerCase() === key){\n            window.open(hashMap[i].url)\n        }\n    }\n})\n\n"],"names":[],"version":3,"file":"index.a6032eaf.js.map","sourceRoot":"/__parcel_source_root/"}