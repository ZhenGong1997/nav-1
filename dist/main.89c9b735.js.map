{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","logoType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","concat","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","console","log","string","stringify","setItem","searchInput","document","querySelector","addEventListener","contains","target","key","i","length","toLowerCase"],"mappings":"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","file":"main.89c9b735.js","sourceRoot":"../src","sourcesContent":["const $siteList = $('.siteList');\nconst $lastLi = $siteList.find('li.last');\n// 拿到localStorage存的值\nconst x = localStorage.getItem('x')\n// 将得到的字符串x变成对象\nconst xObject = JSON.parse(x)\n// 初始为预设。hashMap储存信息，解决退出界面后添加网站消失的问题\n// const hashMap = xObject || [\n//     {logo:\"./images/github-logo.png\",  logoType:'image', url:\"https://www.github.com\"},\n//     {logo:\"./images/css-tricks-logo.jpeg\", logoType:'image', url:\"https://www.css-tricks.com\"},\n//     {logo:\"./images/mdn-logo.png\", logoType:'image', url:\"https://developer.mozilla.org\"},\n// ]\n\nconst hashMap = xObject || [\n    {logo:\"G\",  logoType:'image', url:\"https://www.github.com\"},\n    {logo:\"C\", logoType:'image', url:\"https://www.css-tricks.com\"},\n    {logo:\"M\", logoType:'image', url:\"https://developer.mozilla.org\"},\n    {logo:\"I\", logoType:'image', url:\"https://iconfont.cn\"},\n]\n\nconst simplifyUrl = (url) =>{\n    return url.replace('https://','')\n    .replace('http://','')\n    .replace('www.','')\n    .replace(/\\/.*/,''); //正则表达式删除/开头的内容\n}\n// 遍历预存内容并插入lastLi之前\nconst render = ()=>{\n    // 除新增按钮，remove其他数据（防止两遍）,重写DOM树\n    $siteList.find('li:not(.last)').remove();\n    hashMap.forEach((node, index)=>{\n        const $li = $(`<li>\n            <div class=\"site\">\n                <div class=\"logo\">\n                    ${node.logo}\n                </div>\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\n                <div class=\"close\">\n                    <svg class=\"icon\">\n                        <use xlink:href=\"#icon-closefill\"></use>\n                    </svg>\n                </div>\n            </div> \n        </li>`).insertBefore($lastLi)\n\n        // 用click事件监听点击url,替代了a标签\n        $li.on('click',()=>{\n            window.open(node.url)\n        })\n        // 阻止点击close时冒泡，防止把close当做触发点击a标签\n        $li.on('click','.close',(e)=>{\n            e.stopPropagation();\n            // 删除对应元素\n            hashMap.splice(index, 1);\n       \n            render();\n        })\n    })\n    \n}\n\nrender();\n\n$('.addButton').on('click',()=>{\n    let url = window.prompt(\"请问要添加什么网址？\");\n    if(url.indexOf('https') !== 0){\n        url = 'https://' + url;\n    }\n    \n    // 将添加的新对象存入hashMap\n    hashMap.push({\n        logo:simplifyUrl(url)[0].toUpperCase(),\n        logoType:'text',\n        url:url \n    });  \n    render();\n})\n\nwindow.onbeforeunload = ()=>{\n    console.log('页面关闭')\n    // local storage只能存字符串\n    const string = JSON.stringify(hashMap)\n    // localStrorage在本地设置一个值，并把string传给他\n    localStorage.setItem('x', string)\n}\n\nconst searchInput = document.querySelector('#searchInput')\nsearchInput.addEventListener('keypress', (e) => {\n    console.log(\"搜索框keypress\",e)\n})\n\ndocument.addEventListener('keypress',(e)=>{\n    console.log(\"页面keypress\",e)\n    if(!searchInput.contains(e.target)){\n        const {key} = e\n        for(let i = 0; i < hashMap.length; i++){\n            console.log(hashMap[i].logo.toLowerCase())\n            if(hashMap[i].logo.toLowerCase() === key){\n                window.open(hashMap[i].url)\n            }\n        }        \n    } else {\n        // e.preventDefault()\n    }\n})\n\n\n"]}